<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heitian.ssm.dao.ProductDao">
	<resultMap id="ProductBaseMap" type="com.heitian.ssm.model.Product">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="owner_id" property="ownId" jdbcType="BIGINT"/>
		<result column="shop_id" property="shopId" jdbcType="BIGINT"/>
		<result column="product_photo_id" property="productPhotoId" jdbcType="BIGINT"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="price" property="price" jdbcType="BIGINT"/>
		<result column="category_id" property="categoryId" jdbcType="BIGINT"/>
		<result column="detail" property="detail" jdbcType="VARCHAR"/>
		<result column="created_at" property="createdAt"/>
		<result column="modified_at" property="modifiedAt"/>
	</resultMap>

	<select id="searchByNone" resultMap="ProductBaseMap">
		SELECT product.id, product.owner_id, shop_id, product_photo_id, product.name, price/100 price, category_id, detail, created_at, modified_at, product.amount
		FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE shop.status =0
		ORDER BY product.created_at desc
		limit #{start},#{num}
	</select>

	<select id="searchByNoneGN" resultType="java.lang.Integer">
		SELECT count(*) FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE shop.status =0
	</select>

	<select id="searByOwner" resultMap="ProductBaseMap">
		SELECT product.id, product.owner_id, shop_id, product_photo_id, product.name, price/100 price, category_id, detail, created_at, modified_at, product.amount
		FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE product.owner_id=#{ownerId} AND shop.status !=2
		ORDER BY product.created_at desc
		limit #{start},#{pageNum}
	</select>

	<select id="getOwnerProductCount" resultType="int">
		SELECT count(*) FROM  product JOIN shop ON product.shop_id=shop.id
		 WHERE product.owner_id=#{ownerId} AND shop.status !=2
	</select>

    <select id="searByOwnerForAd" resultMap="ProductBaseMap">
		SELECT product.id, product.owner_id, shop_id, product_photo_id, product.name, price/100 price, category_id, detail, created_at, modified_at
		FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE product.owner_id=#{ownerId} AND shop.status !=2
		AND product.id NOT IN (SELECT product_id FROM product_advertisement WHERE <![CDATA[ product_advertisement.status <2 ]]>)
		limit #{start},#{pageNum}
	</select>

	<select id="getOwnerProductForAdCount" resultType="java.lang.Integer">
		SELECT count(*) FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE product.owner_id=#{ownerId} AND shop.status !=2
        AND product.id NOT IN (SELECT product_id FROM product_advertisement WHERE <![CDATA[ product_advertisement.status <2 ]]>)
	</select>

	<select id="searByShop" resultMap="ProductBaseMap">
		SELECT product.id, product.owner_id, shop_id, product_photo_id, product.name, price/100 price, category_id, detail, created_at, modified_at, product.amount
		FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE product.shop_id=#{id} AND shop.status !=2
		ORDER BY product.created_at desc
		limit #{start},#{pageNum}
	</select>

	<select id="getShopProductCount" resultType="java.lang.Integer">
		SELECT count(*) FROM  product JOIN shop ON product.shop_id=shop.id
		 WHERE product.shop_id=#{id} AND shop.status !=2
	</select>

	<select id="searchWithKeyword" resultMap="ProductBaseMap" parameterType="com.heitian.ssm.bo.ProductCondition">
		SELECT product.id, product.owner_id, shop_id, product_photo_id, product.name, price/100 price, category_id, detail, created_at, modified_at, product.amount
		from product JOIN shop ON product.shop_id=shop.id
		WHERE shop.status =0
		<if test="categoryId != null and categoryId != ''">
			AND category_id= #{categoryId}
		</if>
		<if test="highPrice != null and highPrice != ''">
			<![CDATA[ AND price< #{highPrice} ]]>
		</if>
		<if test="lowPrice != null and lowPrice != ''">
			<![CDATA[ AND price> #{lowPrice} ]]>
		</if>
		<if test="keyWord != null and keyWord != ''">
			AND product.name LIKE "%"#{keyWord,jdbcType=VARCHAR}"%"
		</if>
		ORDER BY product.created_at desc
		limit #{start},#{num}
	</select>

	<select id="searchWithKeywordGN" parameterType="com.heitian.ssm.bo.ProductCondition" resultType="java.lang.Integer">
		SELECT count(*) FROM  product JOIN shop ON product.shop_id=shop.id
		WHERE shop.status =0
		<if test="categoryId != null and categoryId != ''">
			AND category_id= #{categoryId}
		</if>
		<if test="highPrice != null and highPrice != ''">
			<![CDATA[ AND price< #{highPrice} ]]>
		</if>
		<if test="lowPrice != null and lowPrice != ''">
			<![CDATA[ AND price> #{lowPrice} ]]>
		</if>
		<if test="keyWord != null and keyWord != ''">
			AND product.name LIKE "%"#{keyWord,jdbcType=VARCHAR}"%"
		</if>
	</select>

    <select id="searchPhotoURL" parameterType="java.lang.Long" resultType="java.lang.String">
        select path from product_photo
        WHERE id=#{productPhotoId}
    </select>

    <select id="searchProductById" parameterType="java.lang.Long" resultMap="ProductBaseMap">
        select * from product
        WHERE id=#{id}
    </select>

    <select id="selectMaxId" resultType="java.lang.Integer">
        SELECT MAX(id)
        FROM product
    </select>

	<insert id="insertProduct" parameterType="com.heitian.ssm.model.Product">
		insert into
		product(owner_id, shop_id, product_photo_id, name, price*100, category_id, detail, amount)
		VALUES (#{product.ownId}, #{product.shopId},#{product.productPhotoId}, #{product.name},
		 #{product.price}, #{product.categoryId}, #{product.detail}, #{product.amount})
	</insert>

	<delete id="deleteProduct">
		DELETE FROM product,product_advertisement,product_comment,favourite_product,product_in_cart
		USING product,product_advertisement,product_comment,favourite_product,product_in_cart
		WHERE product.id=product_advertisement.product_id=favourite_product.product_id=product_in_cart.product_id=product_comment.product_id
		AND product.id=#{productId}
	</delete>

	<update id="updateProduct" parameterType="com.heitian.ssm.model.Product">
		UPDATE product
		<set>
			<if test="product.name != null">
				name = #{product.name},
			</if>
			<if test="product.price != null">
				price = #{product.price}*100,
			</if>
			<if test="product.categoryId != null">
				category_id = #{product.categoryId},
			</if>
			<if test="product.detail != null">
				detail = #{product.detail},
			</if>
			<if test="product.amount != null">
				amount = #{product.amount}
			</if>
		</set>
		WHERE id=#{product.id}
	</update>

    <update id="updateProductAmount">
        UPDATE product SET
          amount=#{amount}
        WHERE id=#{id}
    </update>
</mapper>

